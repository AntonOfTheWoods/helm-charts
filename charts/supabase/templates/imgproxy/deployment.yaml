{{- if .Values.imgproxy.enabled }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "supabase.imgproxy.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  {{- $versionLabel := dict "app.kubernetes.io/version" ( include "common.images.version" ( dict "imageRoot" .Values.imgproxy.image "chart" .Chart ) ) }}
  {{- $labels := include "common.tplvalues.merge" ( dict "values" ( list .Values.commonLabels $versionLabel ) "context" . ) }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" $labels "context" $ ) | nindent 4 }}
    app.kubernetes.io/part-of: supabase
    app.kubernetes.io/component: imgproxy
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.imgproxy.replicaCount }}
  {{- if .Values.imgproxy.updateStrategy }}
  strategy: {{- toYaml .Values.imgproxy.updateStrategy | nindent 4 }}
  {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.imgproxy.podLabels .Values.commonLabels $versionLabel ) "context" . ) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/component: imgproxy
  template:
    metadata:
      annotations:
        {{- if .Values.imgproxy.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.imgproxy.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/part-of: supabase
        app.kubernetes.io/component: imgproxy
    spec:
      serviceAccountName: {{ template "supabase.serviceAccountName" . }}
      {{- include "supabase.imagePullSecrets" . | nindent 6 }}
      automountServiceAccountToken: {{ .Values.imgproxy.automountServiceAccountToken }}
      {{- if .Values.imgproxy.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.imgproxy.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.imgproxy.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.imgproxy.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.imgproxy.podAffinityPreset "component" "imgproxy" "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.imgproxy.podAntiAffinityPreset "component" "imgproxy" "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.imgproxy.nodeAffinityPreset.type "key" .Values.imgproxy.nodeAffinityPreset.key "values" .Values.imgproxy.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.imgproxy.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.imgproxy.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.imgproxy.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.imgproxy.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.imgproxy.priorityClassName }}
      priorityClassName: {{ .Values.imgproxy.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.imgproxy.schedulerName }}
      schedulerName: {{ .Values.imgproxy.schedulerName | quote }}
      {{- end }}
      {{- if .Values.imgproxy.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.imgproxy.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.imgproxy.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.imgproxy.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.imgproxy.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.imgproxy.terminationGracePeriodSeconds }}
      {{- end }}
      initContainers:
        {{- if .Values.imgproxy.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.imgproxy.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: supabase-imgproxy
          image: {{ template "supabase.imgproxy.image" . }}
          imagePullPolicy: {{ .Values.imgproxy.image.pullPolicy }}
          {{- if .Values.imgproxy.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.imgproxy.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}

          {{- if .Values.imgproxy.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.imgproxy.diagnosticMode.command "context" $) | nindent 10 }}
          {{- else if .Values.imgproxy.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.imgproxy.command "context" $) | nindent 10 }}
          {{- end }}
          {{- if .Values.imgproxy.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.imgproxy.diagnosticMode.args "context" $) | nindent 10 }}
          {{- else if .Values.imgproxy.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.imgproxy.args "context" $) | nindent 10 }}
          {{- end }}

          env:
            - name: IMGPROXY_BIND
              value: ":{{ .Values.imgproxy.application.port | default 5001 }}"
            {{- if .Values.imgproxy.application.localFilesystemRoot }}
            - name: IMGPROXY_LOCAL_FILESYSTEM_ROOT
              value: {{ .Values.imgproxy.application.localFilesystemRoot | quote }}
            {{- end }}
            - name: IMGPROXY_USE_ETAG
              value: {{ .Values.imgproxy.application.useEtag | default "true" | quote }}
            - name: IMGPROXY_ENABLE_WEBP_DETECTION
              value: {{ .Values.imgproxy.application.enableWebpDetection | default "true" | quote }}

            {{- if .Values.imgproxy.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.imgproxy.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}

          envFrom:
            {{- if .Values.imgproxy.extraConfigExistingConfigmap }}
            - configMapRef:
                name: {{ include "supabase.imgproxy.extraConfigmapName" . }}
            {{- end }}
            {{- if .Values.imgproxy.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.imgproxy.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.imgproxy.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.imgproxy.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.imgproxy.resources }}
          resources: {{- toYaml .Values.imgproxy.resources | nindent 12 }}
          {{- else if ne .Values.imgproxy.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.imgproxy.resourcesPreset) | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.imgproxy.containerPorts.http }}
          {{- if not .Values.imgproxy.diagnosticMode.enabled }}
          {{- if .Values.imgproxy.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.imgproxy.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.imgproxy.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.imgproxy.livenessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /health
              port: http
          {{- end }}
          {{- if .Values.imgproxy.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.imgproxy.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.imgproxy.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.imgproxy.readinessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /health
              port: http
          {{- end }}
          {{- if .Values.imgproxy.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.imgproxy.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.imgproxy.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.imgproxy.startupProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /health
              port: http
          {{- end }}
          {{- end }}
          {{- if .Values.imgproxy.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.imgproxy.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /.pm2
              subPath: app-pm2-dir
            - name: data
              mountPath: {{ .Values.imgproxy.persistence.mountPath }}
              {{- if .Values.imgproxy.persistence.subPath }}
              subPath: {{ .Values.imgproxy.persistence.subPath }}
              {{- end }}
          {{- if .Values.imgproxy.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.imgproxy.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.imgproxy.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.imgproxy.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: data
        {{- if .Values.imgproxy.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ default (include "supabase.imgproxy.fullname" .) .Values.imgproxy.persistence.existingClaim }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- if .Values.imgproxy.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.imgproxy.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{- end }}
