minio:
  # To enable minio, set this to true, you also need to uncomment the extraEnvVars below!
  enabled: false
  ingress:
    enabled: false
    ingressClassName: nginx
    hostname: supabase-minio.localhost
  resourcesPreset: "none"

analytics:
  resourcesPreset: "none"
functions:
  resourcesPreset: "none"
imgproxy:
  resourcesPreset: "none"
supabase:

auth:
  resourcesPreset: "none"
meta:
  resourcesPreset: "none"
realtime:
  resourcesPreset: "none"
rest:
  resourcesPreset: "none"
storage:
  resourcesPreset: "none"
  ## UNCOMMENT if you enable minio
  ## WARNING! If you don't name the namespace `supatest`, you will need to modify the `secretKeyRef` below
  ## to namespace-minio, or you will need to create a new minio root secret in the `supatest` namespace and
  ## use that!
  # extraEnvVars:
  #   - name: AWS_ACCESS_KEY_ID
  #     valueFrom:
  #       secretKeyRef:
  #         name: supatest-minio
  #         key: root-user
  #   - name: AWS_SECRET_ACCESS_KEY
  #     valueFrom:
  #       secretKeyRef:
  #         name: supatest-minio
  #         key: root-password

studio:
  resourcesPreset: "none"
  publicURL: "http://supabase-studio.localhost"
  ingress:
    enabled: true
    hostname: supabase-studio.localhost
    ingressClassName: nginx
  ## UNCOMMENT if you enable minio
  ## WARNING! If you don't name the namespace `supatest`, you will need to modify the `secretKeyRef` below
  ## to namespace-minio, or you will need to create a new minio root secret in the `supatest` namespace and
  ## use that!
  # extraEnvVars:
  #   - name: NEXT_PUBLIC_ENABLE_LOGS
  #     value: "true"
  #   - name: NEXT_ANALYTICS_BACKEND_PROVIDER
  #     value: postgres  # postgres, bigquery
  #   - name: AWS_ACCESS_KEY_ID
  #     valueFrom:
  #       secretKeyRef:
  #         name: supatest-minio
  #         key: root-user
  #   - name: AWS_SECRET_ACCESS_KEY
  #     valueFrom:
  #       secretKeyRef:
  #         name: supatest-minio
  #         key: root-password

kong:
  kong:
    resourcesPreset: "none"
  ingress:
    enabled: true
    hostname: supabase.localhost
    ingressClassName: nginx
  service:
    type: ClusterIP

postgresql:
  primary:
    resourcesPreset: "none"